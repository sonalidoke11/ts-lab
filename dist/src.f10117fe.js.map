{"version":3,"sources":["src/index.ts"],"names":[],"mappings":"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","file":"src.f10117fe.js","sourceRoot":"..","sourcesContent":["// @ts-check\r\nclass Vehicle {\r\n    //status = \"stopped\";\r\n    status: 'started' | 'stopped' = 'stopped';\r\n  \r\n    // constructor(make, model, wheels) {\r\n    //   this.make = make;\r\n    //   this.model = model;\r\n    //   this.wheels = wheels;\r\n    // }\r\n    constructor(\r\n      public make: string,\r\n      public model: string,\r\n      //public wheels: number | string\r\n      public wheels: number \r\n    ) {}\r\n    start() {\r\n      this.status = \"started\";\r\n    }\r\n    stop() {\r\n      this.status = \"stopped\";\r\n    }\r\n  }\r\n  \r\n  class Car extends Vehicle {\r\n    constructor(make: string, model: string) {\r\n      super(make, model, 4);\r\n    }\r\n  }\r\n  \r\n  class MotorCycle extends Vehicle {\r\n    constructor(make: string, model: string) {\r\n      super(make, model, 2);\r\n    }\r\n  }\r\n  \r\n  function printStatus(vehicle: Vehicle) {\r\n    if (vehicle.status === \"started\") {\r\n      console.log(\"The vehicle is started.\");\r\n    } else {\r\n      console.log(\"The vehicle is stopped.\");\r\n    }\r\n  }\r\n  \r\n  const myHarley = new MotorCycle(\"Harley-Davidson\", \"Low Rider S\");\r\n  myHarley.start();\r\n  printStatus(myHarley);\r\n  //console.log(myHarley.make.toUppercase());\r\n  console.log(myHarley.make.toUpperCase());\r\n  \r\n  const myBuick = new Car(\"Buick\", \"Regal\");\r\n  myBuick.wheels = myBuick.wheels - 1;     //Number(myBuick.wheels)   will give NaN error if wheels is \"FOUR\"\r\n  console.log(myBuick.wheels);\r\n  console.log(myBuick.model);\r\n\r\n  class NCycle<T>{\r\n    public status: 'started' | 'stopped' = 'stopped';\r\n    public make;\r\n    public model;\r\n    public wheels;\r\n\r\n    constructor(make : T | T[], model: T | T[] , wheels: number ) {\r\n      this.make = make;\r\n      this.model = model;\r\n      this.wheels = wheels;\r\n    }\r\n\r\n    start() {\r\n      this.status = \"started\";\r\n    }\r\n    stop() {\r\n      this.status = \"stopped\";\r\n    }\r\n    print(index: number = 0): void {\r\n      // check if make and model both are arrays\r\n      if(Array.isArray(this.make) && Array.isArray(this.model)){\r\n        // if parameter index exist in this.make, this.model\r\n        if(this.make[index] && this.model[index]){\r\n          console.log(`This Ncycle has a ${this.make[index]} ${this.model[index]} at ${index}`);\r\n        }\r\n      }else {\r\n        console.log(`This is a ${this.make} ${this.model} NCycle`);  \r\n        // if(typeof this.make==='string' && typeof this.model==='string' ){\r\n        //   console.log(`This is a ${this.make} ${this.model} NCycle`);        \r\n        // }else{\r\n        //   console.log(`This is a ${this.make} ${this.model} are not string`); \r\n        // }\r\n      }\r\n    }\r\n\r\n    printAll(): void {\r\n      if (Array.isArray(this.make) && Array.isArray(this.model)) {\r\n          for (let i = 0; i < Math.min(this.make.length, this.model.length) ; i++) {\r\n              console.log(`This NCycle has a ${this.make[i]} ${this.model[i]}`);\r\n          }\r\n      }\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n  const testCycle1 = new NCycle<number>(1, 2, 3);\r\n  testCycle1.print();\r\n  //const test = new NCycle<string[]>()\r\n\r\n  const testCycle2 = new NCycle<string>(\"Ford\", \"F150\", 4);\r\n  testCycle2.print();\r\n\r\n  const testCycle3 = new NCycle<string>(\"Tesla\", \"Mode Y\", 4);  \r\n  testCycle3.print(4);\r\n\r\n  const makes4 = [\"Volkswagon\", \"Tesla\", \"Audi\"];\r\n  const models4 = [\"Passat\", \"Model X\", \"A4\"];\r\n  const testCycle4 = new NCycle<string[]>(makes4, models4, 4);\r\n\r\n  testCycle4.print(2);\r\n  testCycle4.printAll();\r\n\r\n\r\n  const makes5 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\r\n  const models5 = [1, 1, 2, 3, 5];\r\n  const testCycle5 = new NCycle<number[]>(makes5, models5, 0);\r\n  testCycle5.print(7);\r\n  testCycle5.printAll();\r\n\r\n\r\n  "]}